<ResourceDictionary x:Class="CoordAnimation.Global"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:benlib="clr-namespace:BenLib.WPF;assembly=BenLib.WPF"
                    xmlns:p="clr-namespace:CoordAnimation.Properties"
                    xmlns:mat="http://hexinnovation.com/math"
                    xmlns:local="clr-namespace:CoordAnimation">
    <mat:MathConverter x:Key="MathConverter"/>
    <!--================================================== Colors ==================================================-->
    <!--General-->
    <SolidColorBrush x:Key="TextBrush" po:Freeze="True">#FF444444</SolidColorBrush>
    <SolidColorBrush x:Key="TextBrush_Disabled" po:Freeze="True">#50444444</SolidColorBrush>

    <SolidColorBrush x:Key="BorderBrush" po:Freeze="True">#FFABABAB</SolidColorBrush>
    <SolidColorBrush x:Key="BorderBrush_Disabled" po:Freeze="True">#50ABABAB</SolidColorBrush>

    <SolidColorBrush x:Key="HighlightBackground_Gray" po:Freeze="True">#FFC5C5C5</SolidColorBrush>
    <SolidColorBrush x:Key="HighlightForeground_Gray" po:Freeze="True">#FF2B2B2B</SolidColorBrush>

    <!--ListView-->
    <SolidColorBrush x:Key="ListViewTxtBrush" po:Freeze="True">#FF5E5E5E</SolidColorBrush>
    <SolidColorBrush x:Key="ListViewTxtBrush_Disabled" po:Freeze="True">#505E5E5E</SolidColorBrush>

    <SolidColorBrush x:Key="ListViewBackgroundTxtBrush" po:Freeze="True">#FF6D6D6D</SolidColorBrush>
    <SolidColorBrush x:Key="ListViewBackgroundTxtBrush_Disabled" po:Freeze="True">#506D6D6D</SolidColorBrush>

    <!--Button-->
    <SolidColorBrush x:Key="ButtonBackgroundBrush" po:Freeze="True">#FFFDFDFD</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonBackgroundBrush_Disabled" po:Freeze="True">#50FDFDFD</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonMouseOverBrush" po:Freeze="True">#FFE6F2FA</SolidColorBrush>

    <SolidColorBrush x:Key="SBButtonMouseOverBrush" po:Freeze="True">#FFD7D7D7</SolidColorBrush>
    <SolidColorBrush x:Key="SBButtonPressedBrush" po:Freeze="True">#FFB5B5B5</SolidColorBrush>

    <!--RadioButton-->
    <SolidColorBrush x:Key="RadioButtonForeground" po:Freeze="True">#FF777777</SolidColorBrush>

    <!--CheckBox-->
    <SolidColorBrush x:Key="CheckBoxBorderBrush" po:Freeze="True">#FF6E6E6E</SolidColorBrush>
    <SolidColorBrush x:Key="CheckBoxBorderBrush_Disabled" po:Freeze="True">#506E6E6E</SolidColorBrush>

    <!--ProgressBar-->
    <SolidColorBrush x:Key="ProgressBarForeground_Blue" po:Freeze="True">#FF4388F1</SolidColorBrush>
    <SolidColorBrush x:Key="ProgressBarForeground_Green" po:Freeze="True">#FF27AE60</SolidColorBrush>
    <SolidColorBrush x:Key="ProgressBarForeground_Red" po:Freeze="True">#FFE74C3C</SolidColorBrush>

    <!--Tooltip-->
    <Color x:Key="ToolTipBorderColor" po:Freeze="True">#FFBEBEBE</Color>
    <SolidColorBrush x:Key="ToolTipBorderBrush" po:Freeze="True">#FFBEBEBE</SolidColorBrush>
    <SolidColorBrush x:Key="ToolTipTextBrush" po:Freeze="True">#FF5D5D5D</SolidColorBrush>

    <!--VGMGUI-->
    <SolidColorBrush x:Key="ForegroundBrush" po:Freeze="True">#FF16A085</SolidColorBrush>
    <SolidColorBrush x:Key="ForegroundBrush_Disabled" po:Freeze="True">#5016A085</SolidColorBrush>

    <SolidColorBrush x:Key="BackgroundBrush" po:Freeze="True">#FF727272</SolidColorBrush>
    <SolidColorBrush x:Key="BackgroundBrush_Disabled" po:Freeze="True">#50727272</SolidColorBrush>

    <SolidColorBrush x:Key="ErrorBrush" po:Freeze="True">#FFC0392B</SolidColorBrush>
    <SolidColorBrush x:Key="ErrorBrush_Disabled" po:Freeze="True">#50C0392B</SolidColorBrush>

    <SolidColorBrush x:Key="SearchBox_BackgroundBrush" po:Freeze="True">#FFE4E4E4</SolidColorBrush>

    <SolidColorBrush x:Key="StatusBarIconBrush" po:Freeze="True">#FF606060</SolidColorBrush>

    <SolidColorBrush x:Key="VSBackground" po:Freeze="True">#FF252526</SolidColorBrush>
    <SolidColorBrush x:Key="VSBorderBrush" po:Freeze="True">#FF3F3F46</SolidColorBrush>
    <SolidColorBrush x:Key="VSRed" Color="#f38b76"/>
    <SolidColorBrush x:Key="VSGreen" Color="#8dd28a"/>
    <SolidColorBrush x:Key="VSBlue" Color="#7ac1ff"/>
    <SolidColorBrush x:Key="VSYellow" Color="#d8ac6a"/>
    <SolidColorBrush x:Key="VSWhite" Color="#C4C4C4"/>

    <!--================================================== VisualObjectsIcons ==================================================-->

    <Canvas x:Key="VisualObjectCanvas" x:Shared="False" Width="16" Height="16">
        <Canvas>
            <Path Stroke="{StaticResource VSRed}" Data="M7 10.5c-0.3 0-0.5-0.2-0.5-0.5V2c0-0.3 0.2-0.5 0.5-0.5h8c0.3 0 0.5 0.2 0.5 0.5v8c0 0.3-0.2 0.5-0.5 0.5H7z"/>
            <Path Stroke="{StaticResource VSRed}" Data="M15 2L15 2v8l-8 0l0-8H15 M15 1H7C6.4 1 6 1.4 6 2v8c0 0.6 0.4 1 1 1h8c0.6 0 1-0.4 1-1V2C16 1.4 15.6 1 15 1L15 1z"/>
        </Canvas>
        <Canvas>
            <Ellipse Canvas.Left="0.5" Canvas.Top="3.5" Width="9" Height="9" Stroke="{StaticResource VSGreen}"/>
            <Path Stroke="{StaticResource VSGreen}" Data="M5 4c2.2 0 4 1.8 4 4s-1.8 4-4 4s-4-1.8-4-4S2.8 4 5 4 M5 3C2.2 3 0 5.2 0 8s2.2 5 5 5s5-2.2 5-5S7.8 3 5 3L5 3z"/>
        </Canvas>
        <Canvas>
            <Path Stroke="{StaticResource VSBlue}" Data="M5.6 14.5c-0.3 0-0.4-0.2-0.4-0.3c0-0.1-0.1-0.3 0-0.5l4.6-8c0.1-0.2 0.3-0.3 0.4-0.3c0.1 0 0.3 0 0.4 0.3   l4.6 8c0.1 0.2 0 0.4 0 0.5c0 0.1-0.2 0.3-0.4 0.3H5.6z"/>
            <Path Stroke="{StaticResource VSBlue}" Data="M10.2 6L10.2 6l4.6 8l-9.2 0L10.2 6C10.2 6 10.2 6 10.2 6 M10.2 5C9.9 5 9.5 5.2 9.3 5.5l-4.6 8C4.3 14.2 4.8 15 5.6 15   h9.2c0.8 0 1.3-0.8 0.9-1.5l-4.6-8C10.9 5.2 10.5 5 10.2 5L10.2 5z"/>
        </Canvas>
    </Canvas>
    <Viewbox x:Key="VisualObject" x:Shared="False" Stretch="Uniform" Width="16" Height="16" Child="{StaticResource VisualObjectCanvas}"/>
    <Viewbox x:Key="VisualObjectGroup" x:Shared="False" Stretch="Uniform" Height="16" Width="16">
        <Canvas Width="16" Height="16">
            <Path Fill="{StaticResource VSYellow}" Data="M12.9 9.7l0-1.3c0-0.5-0.2-1-0.6-1.3C12 6.6 11.5 6.4 11 6.4H6.4V6.2c0-0.5-0.2-1-0.6-1.3  C5.5 4.5 5.1 4.3 4.6 4.3H1.9c-0.5 0-1 0.2-1.3 0.6C0.2 5.2 0 5.7 0 6.2v8l1.1-0.9V6.2h0c0-0.2 0.1-0.4 0.2-0.6  c0.2-0.2 0.3-0.2 0.6-0.2h2.7c0.2 0 0.4 0.1 0.6 0.2C5.3 5.8 5.4 6 5.4 6.2v0.5c0 0.2 0.1 0.4 0.2 0.6c0.2 0.2 0.3 0.2 0.6 0.2H11  c0.2 0 0.4 0.1 0.6 0.2c0.2 0.2 0.2 0.3 0.2 0.6v1.3L12.9 9.7z"/>
            <Viewbox Stretch="Uniform" Width="13" Height="13" Canvas.Left="0.5" Canvas.Top="1.25" Opacity="0.5" Child="{StaticResource VisualObjectCanvas}"/>
            <Path Fill="{StaticResource VSYellow}" Data="M0 14.2c0 0.5 0.2 1 0.6 1.3c0.4 0.4 0.8 0.6 1.3 0.6H11c0.4 0 0.8-0.1 1.2-0.3c0.4-0.2 0.7-0.4 1-0.7l2.5-3  c0.3-0.3 0.4-0.7 0.4-1c0-0.2 0-0.4-0.1-0.6c-0.1-0.3-0.3-0.5-0.6-0.6c-0.3-0.1-0.5-0.2-0.8-0.2h-1.6l-1.1 0H5.4  C5 9.7 4.6 9.8 4.2 10c-0.4 0.2-0.7 0.4-1 0.7l-2.1 2.6L0 14.2z"/>
        </Canvas>
    </Viewbox>

    <Viewbox x:Key="PointPoint" x:Shared="False" Stretch="Uniform" Width="16" Height="16">
        <Canvas Width="16" Height="16">
            <Path Fill="{StaticResource VSRed}">
                <Path.Data>
                    <EllipseGeometry Center="8,8" RadiusX="4" RadiusY="4"/>
                </Path.Data>
            </Path>
        </Canvas>
    </Viewbox>

    <Viewbox x:Key="InTex" x:Shared="False" Width="16" Height="16" Stretch="Uniform">
        <TextBlock Text="𝑇𝑥" FontFamily="Cambria Math" FontWeight="Bold" VerticalAlignment="Center" Foreground="{StaticResource VSWhite}"/>
    </Viewbox>

    <PathGeometry x:Key="AxesGeometry" Figures="M471.6 235.8h-77.5c0-31.6-40.4-31.6-40.4 0h-77.5v-77.5c31.6 0 31.6-40.4 0-40.4V40.4c33.2 0 28.5-40.4 3.4-40.4h-47.2     c-25.6 0-29.3 40.4 3.4 40.4v77.5c-31.9 0-31.3 40.4 0 40.4v77.5h-77.5c0-31.4-40.4-31.6-40.4 0H40.4c0-33.2-40.4-28.5-40.4-3.4     v47.2c0 25.1 40.4 29.8 40.4-3.4h77.5c0 31.4 40.4 31.8 40.4 0h77.5v77.5c-31.6 0-31.6 40.4 0 40.4v77.5     c-33.2 0-28.5 40.4-3.4 40.4h47.2c25.2 0 29.8-40.4-3.4-40.4v-77.5h3.4c25.2 0 29.8-40.4-3.4-40.4v-77.5h77.5     c0 31.6 40.4 31.6 40.4 0h77.5c0 32.6 40.4 29 40.4 3.4v-47.2C512 207.3 471.6 202.6 471.6 235.8z"/>
    <Viewbox x:Key="Axes" x:Shared="False" Stretch="Uniform" Width="16" Height="16">
        <Canvas Width="512" Height="512">
            <Path Fill="White" Data="{StaticResource AxesGeometry}"/>
        </Canvas>
    </Viewbox>
    <Viewbox x:Key="AxesNumbers" x:Shared="False" Stretch="Uniform" Width="16" Height="16">
        <Canvas Width="512" Height="512">
            <Path Fill="White" Data="{StaticResource AxesGeometry}"/>
            <Path Fill="{StaticResource VSBlue}" Data="M109.8 420.5l-16.9 80c-0.7 3.2-3.5 5.5-6.8 5.5H28.5c-4.4 0-7.7-4.1-6.8-8.4l15.7-74.3   c0.9-4.3-2.4-8.4-6.8-8.4H12.6c-3.8 0-6.9-3.1-6.9-6.9v-58.2c0-3.8 3.1-6.9 6.9-6.9h35.8c3.3 0 6.1-2.3 6.8-5.5l8.8-42.6   c0.9-4.3-2.4-8.3-6.8-8.3H12.6c-3.8 0-6.9-3.1-6.9-6.9v-57.9c0-3.8 3.1-6.9 6.9-6.9H75c3.3 0 6.1-2.3 6.8-5.5L98.7 129   c0.7-3.2 3.5-5.5 6.8-5.5h57.9c4.4 0 7.7 4.1 6.8 8.4l-15.7 74.6c-0.9 4.3 2.4 8.4 6.8 8.4h55c3.3 0 6.1-2.3 6.8-5.5l16.9-80.3   c0.7-3.2 3.5-5.5 6.8-5.5h57.6c4.4 0 7.7 4 6.8 8.3l-15.5 74.6c-0.9 4.3 2.4 8.3 6.8 8.3h18.1c3.8 0 6.9 3.1 6.9 6.9v57.9   c0 3.8-3.1 6.9-6.9 6.9h-36.1c-3.3 0-6.1 2.3-6.8 5.5l-8.8 42.6c-0.9 4.3 2.4 8.3 6.8 8.3h44.9c3.8 0 6.9 3.1 6.9 6.9V408   c0 3.8-3.1 6.9-6.9 6.9h-62.6c-3.3 0-6.1 2.3-6.8 5.5l-16.9 80c-0.7 3.2-3.5 5.5-6.8 5.5h-57.6c-4.4 0-7.7-4-6.8-8.3l15.5-74.3   c0.9-4.3-2.4-8.3-6.8-8.3h-55C113.4 415 110.5 417.3 109.8 420.5z M134.3 342.9h55.3c3.3 0 6.1-2.3 6.8-5.5l8.8-42.6   c0.9-4.3-2.4-8.3-6.8-8.3h-55.3c-3.3 0-6.1 2.3-6.8 5.5l-8.8 42.6C126.7 338.9 130 342.9 134.3 342.9z"/>
        </Canvas>
    </Viewbox>
    <Viewbox x:Key="Grid" x:Shared="False" Stretch="Uniform" Width="16" Height="16">
        <Canvas Width="513" Height="513">
            <Line X1="19.5" Y1="138.5" X2="493.5" Y2="138.5" Stroke="White" StrokeThickness="39"/>
            <Line X1="19.5" Y1="374.5" X2="493.5" Y2="374.5" Stroke="White" StrokeThickness="39"/>
            <Line X1="138.5" Y1="493.5" X2="138.5" Y2="19.5" Stroke="White" StrokeThickness="39"/>
            <Line X1="374.5" Y1="493.5" X2="374.5" Y2="19.5" Stroke="White" StrokeThickness="39"/>
        </Canvas>
    </Viewbox>

    <!--================================================== ContextMenus ==================================================-->

    <ContextMenu x:Key="ErrorItemCM">
        <MenuItem Name="E_OpenFPMI" Header="{DynamicResource CM_OpenFP}">
            <MenuItem.Icon>
                <Image Height="16" Width="16" Source="../Images/FileListItemCM/Open.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Name="E_CopyFPMI" Header="{DynamicResource TT_Copy}">
            <MenuItem.Icon>
                <Image Height="16" Width="16" Source="../Images/FileListItemCM/Copy.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Name="E_PropertiesMI" Header="{DynamicResource CM_Properties}">
            <MenuItem.Icon>
                <Image Height="16" Width="16" Source="../Images/FileListItemCM/Properties.png"/>
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <ContextMenu x:Key="TextCM">
        <MenuItem Name="T_CopyMI" Command="{x:Static ApplicationCommands.Copy}">
            <MenuItem.Icon>
                <Image Height="16" Width="16" Source="../Images/TextCM/Copy.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Name="T_CutMI" Command="{x:Static ApplicationCommands.Cut}">
            <MenuItem.Icon>
                <Image Height="16" Width="16" Source="../Images/TextCM/Cut.png"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Name="T_PasteMI" Command="{x:Static ApplicationCommands.Paste}">
            <MenuItem.Icon>
                <Image Height="16" Width="16" Source="../Images/TextCM/Paste.png"/>
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <!--================================================== Styles & Templates ==================================================-->

    <!--====================General====================-->
    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="10000"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ForegroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#D6E5FF"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#A3BDE3"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#B2CEF7"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#5C6A80"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonNoBoldFocus" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#D6E5FF"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#A3BDE3"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#B2CEF7"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#5C6A80"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StatusBarButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8,2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SBButtonMouseOverBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SBButtonMouseOverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SBButtonPressedBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SBButtonPressedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="False"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Background" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{StaticResource HighlightBackground_Gray}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="#FF969696"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="#FFAEAEAE"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
    </Style>
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ContextMenu" Value="{DynamicResource TextCM}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">

                    <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost">
                            <ScrollViewer.CommandBindings>
                                <CommandBinding Command="{x:Static ApplicationCommands.Copy}" PreviewExecuted="CommandBinding_Executed" Executed="CommandBinding_Executed"/>
                                <CommandBinding Command="{x:Static ApplicationCommands.Cut}" PreviewExecuted="CommandBinding_Executed" Executed="CommandBinding_Executed"/>
                                <CommandBinding Command="{x:Static ApplicationCommands.Paste}" PreviewExecuted="CommandBinding_Executed" Executed="CommandBinding_Executed"/>
                            </ScrollViewer.CommandBindings>
                        </ScrollViewer>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="#ABABAB" To="#A3BDE3" Duration="0:0:0.15" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation From="#A3BDE3" To="#ABABAB" Duration="0:0:0.15" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type benlib:SwitchableTextBox}" TargetType="{x:Type benlib:SwitchableTextBox}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    </Style>
    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">

                    <BulletDecorator Background="{TemplateBinding Background}">
                        <BulletDecorator.Bullet>
                            <Grid Width="12" Height="12" >
                                <Ellipse x:Name="Border" Fill="White" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}"/>
                                <Ellipse x:Name="CheckMark" Margin="3" Fill="{StaticResource RadioButtonForeground}"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="#FFD5E1F2"/>
                            <Setter TargetName="Border" Property="Stroke" Value="#FFA4BDE2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">

                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <Grid>
                                    <Path Width="11" Height="11" x:Name="CheckMark" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1.75" Data="M 9.5,2 L 4.25,8.5 L 1.75,5"/>
                                    <Rectangle Margin="2" x:Name="NullCheckMark" Fill="{TemplateBinding BorderBrush}" Visibility="Collapsed"/>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="NullCheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="NullCheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground_Gray}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FF969696"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF969696"/>
                            <Setter TargetName="CheckMark" Property="Stroke" Value="#FF505050"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid>
                        <Border Name="PART_Track" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Viewbox Stretch="None" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}">
                                <Line Margin="20,0,0,0" Name="IndeterminateLine" Visibility="Collapsed" Stroke="{TemplateBinding Foreground}" StrokeDashArray="0.75 0 0 1" StrokeThickness="{TemplateBinding ActualHeight}"
                                  X1="0"
                                  Y1="{TemplateBinding ActualHeight, Converter={StaticResource MathConverter}, ConverterParameter=x/2}"
                                  X2="{TemplateBinding ActualWidth, Converter={StaticResource MathConverter}, ConverterParameter=x+7}"
                                  Y2="{TemplateBinding ActualHeight, Converter={StaticResource MathConverter}, ConverterParameter=x/2}">
                                    <Line.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform AngleX="-20"/>
                                            <RotateTransform/>
                                            <TranslateTransform X="-20"/>
                                        </TransformGroup>
                                    </Line.RenderTransform>
                                </Line>
                            </Viewbox>
                        </Border>
                        <Border Name="PART_Indicator" Background="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard Name="IndeterminateAnimation">
                                <Storyboard>
                                    <DoubleAnimation To="-14" Duration="0:0:3" RepeatBehavior="Forever" By="2" Storyboard.TargetName="IndeterminateLine" Storyboard.TargetProperty="StrokeDashOffset"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter TargetName="PART_Indicator" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IndeterminateLine" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource ToolTipTextBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource ToolTipBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="5">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{TemplateBinding BorderBrush}" BlurRadius="10" ShadowDepth="0" Opacity="0.2" Direction="0" RenderingBias="Quality"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--===============================================-->


    <!--====================ListView====================-->
    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Background" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle HorizontalAlignment="Center" Width="0" Fill="{TemplateBinding Background}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#505050"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#CCCEDB"/>
        <Setter Property="benlib:GridViewColumnHeaderProperties.MouseOverBrush" Value="#D9EBF9"/>
        <Setter Property="benlib:GridViewColumnHeaderProperties.IsPressedBrush" Value="#BCDCF4"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="-2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">

                    <Grid>
                        <!-- Haut -->
                        <Border Name="HeaderBorder" BorderThickness="0,0,1,0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ContentPresenter Name="HeaderContent" Margin="0,0,0,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!-- Bas -->
                        <Border Name="Border2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1"/>
                        <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-9,0" Style="{StaticResource GridViewColumnHeaderGripper}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{Binding (benlib:GridViewColumnHeaderProperties.MouseOverBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="HeaderBorder" Property = "Background" Value="{Binding (benlib:GridViewColumnHeaderProperties.IsPressedBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NoResizeColumn" TargetType="GridViewColumnHeader">
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#505050"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#CCCEDB"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="-2,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">

                    <Grid>
                        <!-- Haut -->
                        <Border Name="HeaderBorder" BorderThickness="0,0,1,0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <ContentPresenter Name="HeaderContent" Margin="0,0,0,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!-- Bas -->
                        <Border Name="Border2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="#D9EBF9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="HeaderBorder" Property = "Background" Value="#BCDCF4"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--==========ListViewItem==========-->
    <Style x:Key="{x:Type ListViewItem}" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{StaticResource ListViewTxtBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="-1,0,-1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Name="Border" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter Property="Background" Value="{Binding IsMouseOverBackground}"/>
                            <Setter Property="Foreground" Value="{Binding IsMouseOverForeground}"/>
                            <!-->
                                <Setter.Value>
                                    <SolidColorBrush Color="#3399FF" Opacity="0.15"/>
                                </Setter.Value>
                            </Setter>-->
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{Binding IsSelectedBackground}"/>
                            <Setter Property="Foreground" Value="{Binding IsSelectedForeground}"/>
                            <!-->
                                <Setter.Value>
                                    <SolidColorBrush Color="#3399FF" Opacity="0.27"/>
                                </Setter.Value>
                            </Setter>-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WinExpolrerItem" TargetType="ListViewItem">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Margin" Value="-1,0,-1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid>
                        <!-- Haut -->
                        <Border Name="Border" Padding="2" SnapsToDevicePixels="True" Background="White" BorderThickness="1,1,1,0">
                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <!-- Bas -->
                        <Border Name="Border2" Padding="2" SnapsToDevicePixels="True" BorderThickness="0,0,0,1" Margin="0,0,0,-1"/>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter TargetName="Border" Property="Background" Value="#E5F3FF"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#CCE8FF"/>
                            <!-- Haut -->
                            <Setter TargetName="Border" Property="BorderBrush" Value="#99D1FF"/>
                            <!-- Bas -->
                            <Setter TargetName="Border2" Property="BorderBrush" Value="#99D1FF"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--================================-->
    <Style x:Key="{x:Type ListView}" TargetType="{x:Type ListView}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#CCCEDB"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--================================================-->


    <!--====================ListBox====================-->
    <!--==========ListBoxItem==========-->
    <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Margin" Value="-1,0,-1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#3399FF" Opacity="0.15"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#3399FF" Opacity="0.27"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ErrorItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Margin" Value="-1,0,-1,0"/>
        <Setter Property="ContextMenu" Value="{DynamicResource ErrorItemCM}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter Content="{DynamicResource Error}"/>
                            <ContentPresenter Margin="3,0,0,0"/>
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#3399FF" Opacity="0.15"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#3399FF" Opacity="0.27"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--===============================-->
    <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Margin="0" Focusable="false">
                            <StackPanel Margin="2" IsItemsHost="True" />
                        </ScrollViewer>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--===============================================-->


    <!--====================ComboBox====================-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>

            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <Border x:Name="Fond" Grid.Column="0" CornerRadius="0" Margin="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource TextBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground_Gray}" />
            </Trigger>

            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground_Gray}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.313"/>
            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{StaticResource ToolTipTextBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground_Gray}"/>
                            <Setter Property="Foreground" Value="{StaticResource HighlightForeground_Gray}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">

                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderThickness="0" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{TemplateBinding Background}"/>
                                <ScrollViewer Margin="3.5,3.5,3.5,3.5" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--================================================-->


    <!--====================TabControl====================-->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="#303030"/>
        <Setter Property="Background" Value="#FAFAFA"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="0,3,0,0">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="White" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="Border" Property="Margin" Value="0,1,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent"/>
                        <Border Name="Border" Grid.Row="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" >
                            <ContentPresenter Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--==================================================-->


    <!--====================Slider====================-->
    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse Name="Ellipse" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Stroke" Value="#A3BDE3"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TickBar Name="TopTick" SnapsToDevicePixels="True" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Visibility="Collapsed"/>
            <Border Name="TrackBackground" Margin="7,0,7,0" Height="2" Grid.Row="1" Background="{TemplateBinding BorderBrush}"/>
            <Track Grid.Row="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar Name="BottomTick" SnapsToDevicePixels="True" Grid.Row="2" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.313"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TickBar Name="TopTick" SnapsToDevicePixels="True" Fill="{TemplateBinding Foreground}" Placement="Left" Width="4" Visibility="Collapsed"/>
            <Border Name="TrackBackground" Margin="7,0,7,0" Width="2" Grid.Column="1" Background="{TemplateBinding BorderBrush}"/>
            <Track Grid.Column="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar Name="BottomTick" SnapsToDevicePixels="True" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Width="4" Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.313"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--==============================================-->

    <Style x:Key="{x:Type TreeView}" TargetType="TreeView">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Background" Value="{StaticResource VSBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource VSBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                        <ScrollViewer Focusable="False" CanContentScroll="False" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15" Height="13" Background="Transparent">
                        <Path x:Name="ExpandPath" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="1,1,1,1" Fill="Transparent" Stroke="White" StrokeThickness="1" Data="M 3.5 0 L 7 3.5 L 3.5 7 Z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 3.5 L 7 3.5 L 3.5 7 Z"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#007acc"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2" Opacity="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="benlib:TreeViewItemProperties.IsSelectedBackgroundBrush" Value="#007acc"/>
        <Setter Property="benlib:TreeViewItemProperties.IsSelectedForegroundBrush" Value="White"/>
        <Setter Property="benlib:TreeViewItemProperties.IsSelectedInactiveBackgroundBrush" Value="#3f3f46"/>
        <Setter Property="benlib:TreeViewItemProperties.IsSelectedInactiveForegroundBrush" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{Binding (benlib:TreeViewItemProperties.IsSelectedBackgroundBrush)}"/>
                            <Setter Property="Foreground" Value="{Binding (benlib:TreeViewItemProperties.IsSelectedForegroundBrush)}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{Binding (benlib:TreeViewItemProperties.IsSelectedInactiveBackgroundBrush)}"/>
                            <Setter Property="Foreground" Value="{Binding (benlib:TreeViewItemProperties.IsSelectedInactiveForegroundBrush)}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--====================ContextMenu====================-->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Height="24">
            <Grid VerticalAlignment="Center">
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer CanContentScroll="True">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground_Gray}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource HighlightForeground_Gray}"/>
            </Trigger>
            <!--<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
                </Trigger>-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.313"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Height="24">
            <Grid VerticalAlignment="Center">
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground_Gray}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource HighlightForeground_Gray}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.313"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate  x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Height="24">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                <Viewbox Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0">
                    <Path Name="CheckMark" Width="11" Height="11" Visibility="Hidden" Stroke="{StaticResource CheckBoxBorderBrush}" StrokeThickness="1.75" Data="M 9.5,2 L 4.25,8.5 L 1.75,5"/>
                </Viewbox>
                <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,0,2" DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground_Gray}"/>
                <Setter Property="Foreground" Value="{StaticResource HighlightForeground_Gray}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.313"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Height="24">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right"/>
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{StaticResource BorderBrush}" />
                <Popup Name="Popup" Placement="Right" HorizontalOffset="-4" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer CanContentScroll="True">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource HighlightBackground_Gray}"/>
                <Setter Property="Foreground" Value="{StaticResource HighlightForeground_Gray}"/>
            </Trigger>
            <!--<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
                </Trigger>-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.313"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,1,0,1"/>
        <Setter Property="BorderBrush" Value="#E0E3E6"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource ListViewTxtBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#C6C6C6"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Margin="5">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        <Border.Effect>
                            <DropShadowEffect Color="{TemplateBinding BorderBrush}" BlurRadius="10" ShadowDepth="0" Opacity="0.2" Direction="0" RenderingBias="Quality"/>
                        </Border.Effect>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--===================================================-->

    <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Fill="{TemplateBinding BorderBrush}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Width="1" Margin="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type StatusBarItem}" TargetType="{x:Type StatusBarItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1000"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <ContentPresenter Margin="3"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.313"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>